workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "production" || $CI_COMMIT_BRANCH == "stage" || $CI_COMMIT_BRANCH == "develop" || $TEST == "true"
      when: always
    - when: never

variables:
  PROJECT_DEFAULT_DIRECTORY: /opt/$CI_PROJECT_NAMESPACE
  STAGE_SERVER_USER: deed
  PRODUCTION_SERVER_USER: ubuntu
  SSH_PORT: 22
  STAGE_PORT: 5024
  PRODUCTION_PORT: 5025
  STAGE_SERVER_HOST: 192.168.59.2
  STAGE_APP_API_BASE_URL: https://stage.mobinn.ir
  STAGE_ENDPOINT: https://stage.mobinn.ir
  PRODUCTION_SERVER_HOST: 188.121.118.222
  PRODUCTION_APP_API_BASE_URL: https://mobinn.ir
  PRODUCTION_ENDPOINT: https://mobinn.ir
  SSH_COMMAND: ssh -o StrictHostKeyChecking=no -p $SSH_PORT -i deploy-key.pem
  SCP_COMMAND: scp -P $SSH_PORT -o StrictHostKeyChecking=no -i deploy-key.pem

stages:
  - build
  - deploy

build_and_push_image:
  stage: build
  tags:
    - builder
  before_script:
    - echo "$HARBOR_PASSWORD" | docker login --password-stdin --username "$HARBOR_USER" -- "$HARBOR_REGISTRY"
  script:
    - docker build
      -t $HARBOR_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID
      -f Dockerfile .
    - docker push $HARBOR_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID
  rules:
    - if: $CI_COMMIT_BRANCH == "stage" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - if: $CI_COMMIT_BRANCH == "production" || $TEST == "true"
      when: manual

.deploy_template:
  stage: deploy
  tags:
    - builder
  needs:
    - job: build_and_push_image
  variables:
    SERVER_USER: ""
    APP_API_BASE_URL: ""
    FOLDER_NAME: ""
    SERVER_HOST: ""
    DEPLOY_ENV: ""
    APP_PORT: ""
    ENDPOINT: ""
    IMAGE_TAG_SUFFIX: ""
  before_script:
    - echo "$HARBOR_PASSWORD" | docker login --password-stdin --username "$HARBOR_USER" -- "$HARBOR_REGISTRY"
    - docker pull $HARBOR_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_PIPELINE_IID
    - echo "DC_FOLDER_NAME=$FOLDER_NAME" >> .env
    - echo "DC_DEPLOY_ENV=$DEPLOY_ENV" >> .env
    - echo "DC_SKIP_PREFLIGHT_CHECK=true" >> .env
    - echo "DC_REACT_APP_BASE_URL=$APP_API_BASE_URL" >> .env
    - echo "DC_REACT_APP_STIMULSOFT_LICENCE_KEY=yR1rlqTYzZ/5pnLYAic4vENlHb6gO7ARMA6BuUgtXRGqDH0YY/AMt8UJ0e3ZBHDp9eOg5CUvBlaib+LFSU5XZtXTPaPDPyJZo5sIguHjEic4TCLUdqDCWKUA8k6LayR3SqQpwKoVU8ySQ9ijKHnMTl0XmuaF6oBjdRG52zK/rBqOeDsQphM1g5f8VJfbrqATzGJjmuX7Bl7ZmqrrfCZkIy15otU4ZUAVqGY4E3xBJYaHygICpHa+4AiF0aVKmb6VGeQfaB7o/+NMnwSLBRRAwmLKf4bjq4/rlsZdI/sIwhzW7AZZ++M8Tq/jwsiXaIisvSowxaHg+O8nhVV2Yon4mqOLgoPMj5RSxZSpPCWIUefYHb1p1KkZNoyE3kU4K/XsBQYLV32lnUmt5ZDpVFD65Jfg7s0u/Qrw3eViW1m7VrkGMq9n5ba2hvhYLjZTucVDI3Zb8aFZW9+owhOoA2GF3xZ1atm9UKySO9GJtmih/AWhegNAxnxzIUl5bKvX1t1Y7SSg30tDmJiviyloqZsUrwXZenQTzIdOgV5/fNeC6GU66EDZnRhat6mOi6ZuZoTg" >> .env
    - echo "DC_REACT_APP_VERSION=1" >> .env
    - echo "DC_REACT_APP_APP_VERSION=1.16.10" >> .env
    - echo "DC_GENERATE_SOURCEMAP=false" >> .env
    - echo "DC_REACT_APP_RECAPTCHA_SITE_KEY=6LeABs0qAAAAACsnZHGCrhaWRcdlKtMewlk5oyb8" >> .env
    - echo "DC_REACT_APP_RECAPTCHA_SECRET_KEY=6LeABs0qAAAAAJvdA-VbqE4QTdHLQLA409UdGciR" >> .env
    - echo "DC_APP_API_BASE_URL=$APP_API_BASE_URL" >> .env
    - echo "DC_APP_PORT=$APP_PORT" >> .env
    - echo "DC_ENVIRONMENT_STATE=$DEPLOY_ENV" >> .env
    - echo "DC_IMAGE_TAG=$CI_PIPELINE_IID" >> .env
    - echo "DC_IMAGE_NAME=$HARBOR_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME" >> .env
    - cat .env
    - cat $SSH_PRIVATE_KEY | awk '{gsub(/\\n/,"\n")}1' > deploy-key.pem
    - chmod 400 deploy-key.pem
  script:
    - $SSH_COMMAND $SERVER_USER@$SERVER_HOST "sudo mkdir -p $PROJECT_DEFAULT_DIRECTORY/$FOLDER_NAME $PROJECT_DEFAULT_DIRECTORY/$FOLDER_NAME/backup_compose_file && sudo chown -R $SERVER_USER:$SERVER_USER $PROJECT_DEFAULT_DIRECTORY/$FOLDER_NAME $PROJECT_DEFAULT_DIRECTORY/$FOLDER_NAME/backup_compose_file"
    - $SCP_COMMAND .env ./docker-compose.yml ./deployments/scripts/update.sh $SERVER_USER@$SERVER_HOST:$PROJECT_DEFAULT_DIRECTORY/$FOLDER_NAME
    - $SSH_COMMAND $SERVER_USER@$SERVER_HOST "
      echo "$HARBOR_PASSWORD" | docker login --password-stdin --username "$HARBOR_USER" -- "$HARBOR_REGISTRY" &&
      cd $PROJECT_DEFAULT_DIRECTORY/$FOLDER_NAME &&

      ./update.sh $DEPLOY_ENV docker-compose.yml "
  environment:
    name: $DEPLOY_ENV
    url: $ENDPOINT

deploy_to_stage:
  extends: .deploy_template
  variables:
    SERVER_USER: $STAGE_SERVER_USER
    APP_API_BASE_URL: $STAGE_APP_API_BASE_URL
    FOLDER_NAME: $CI_PROJECT_NAME-stage
    SERVER_HOST: $STAGE_SERVER_HOST
    DEPLOY_ENV: stage
    APP_PORT: $STAGE_PORT
    ENDPOINT: $STAGE_ENDPOINT
  rules:
    - if: $CI_COMMIT_BRANCH == "stage" || $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - if: $TEST == "true"
      when: manual

deploy_to_production:
  extends: .deploy_template
  variables:
    SERVER_USER: $PRODUCTION_SERVER_USER
    APP_API_BASE_URL: $PRODUCTION_APP_API_BASE_URL
    FOLDER_NAME: $CI_PROJECT_NAME-production
    SERVER_HOST: $PRODUCTION_SERVER_HOST
    DEPLOY_ENV: production
    APP_PORT: $PRODUCTION_PORT
    ENDPOINT: $PRODUCTION_ENDPOINT
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
      when: manual
    - if: $TEST == "true"
      when: manual
